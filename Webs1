<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
  <style>
    body {
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: black;
    }
    #canvasContainer {
      border: 5px solid white;
      overflow: hidden;
      display: flex;
      justify-content: center;
      align-items: center;
      max-width: 90vh;
      max-height: 90vh;
    }
    canvas {
      max-width: 100%;
      max-height: 100%;
    }
  </style>
</head>
<body>
  <div id="canvasContainer">
    <script>
      const particles = [];
      const numParticles = 500;
      const maxLife = 400;
      const noiseScale = 0.005;

      function setup() {
        let canvasSize = min(windowWidth, windowHeight) * 0.9;
        let canvas = createCanvas(canvasSize, canvasSize);
        canvas.parent('canvasContainer');
        colorMode(HSB, 360, 100, 100, 100);
        for (let i = 0; i < numParticles; i++) {
          particles[i] = new Particle();
        }
        background(0);
      }

      function draw() {
        for (const particle of particles) {
          particle.update();
          particle.display();
          particle.checkEdges();
        }
      }

      class Particle {
        constructor() {
          this.pos = createVector(random(width), random(height));
          this.vel = createVector(0, 0);
          this.acc = createVector(0, 0);
          this.life = 0;
          this.maxLife = random(maxLife * 0.5, maxLife);
          this.hue = random(190, 230);
        }

        update() {
          const angle = noise(this.pos.x * noiseScale, this.pos.y * noiseScale, frameCount * noiseScale) * TWO_PI * 4;
          const force = p5.Vector.fromAngle(angle);
          this.acc.add(force);
          this.vel.add(this.acc);
          this.pos.add(this.vel);
          this.acc.mult(0);
          this.vel.limit(2);
          this.life++;
        }

        display() {
          stroke(this.hue, 80, 100, map(this.life, 0, this.maxLife, 100, 0));
          strokeWeight(1);
          point(this.pos.x, this.pos.y);
        }

        checkEdges() {
          if (this.pos.x < 0 || this.pos.x > width || this.pos.y < 0 || this.pos.y > height) {
            this.life = this.maxLife;
          }

          if (this.life >= this.maxLife) {
            this.pos = createVector(random(width), random(height));
            this.life = 0;
          }
        }
      }
    </script>
  </div>
</body>
</html>
